### Start Keyboard ###
- id: telegram-start
  alias: '[Telegram] - Start Command'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/start'
  action:
    service: telegram_bot.send_message
    data_template:
      target: "{{ trigger.event.data.user_id }}"
      message: >
       {{ [
       "Привет",
       "Что надо хозяин?",
       "Слушаю!",
       "Рад тебя видеть"
       ] | random }}       
      inline_keyboard:
        - 'Статус системы:/status, Состояние батареек:/zigbee_batteries'
        - 'Стоимость электроэнергии:/energy_cost'
        - 'Датчики температуры:/temperature, Датчики состояния:/states'


    
      
- alias: '[Telegram] - Ответ статус системы'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      command: '/status'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: "System is online!
          Последний раз запущена {{ states('sensor.last_boot') }}."
        show_alert: true

      
- alias: '[Telegram] - Вывод состояния батареек всех zigbee устройств'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      command: '/zigbee_batteries'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: "Cостояния батареек: "
        
    - service: telegram_bot.edit_message
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        title: "<b>Cостояния батареек:</b>"
        message: >
      
          <b>Спальня:</b>
          
          Дверь: {{ states('sensor.dver_spalnia_battery') }}%
      
          Датчик движения: {{ states('sensor.datchik_dvizheniia_spalnia_battery') }}%

          Датчик температуры: {{ states('sensor.datchik_temperatury_spalnia_battery') }}%

          Выключатель: {{ states('sensor.vykliuchatel_spalnia_battery') }}%
          
          Датчик утечки под батареей: {{ states('sensor.datchik_utechki_vody_spalnia_battery') }}%
          
          Датчик левого окна: {{ states('sensor.levoe_okno_spalnia_battery') }}%
          
          Датчик правого окна: {{ states('sensor.pravoe_okno_spalnia_battery') }}%
        
        
          <b>Детская:</b>
          
          Датчик движения: {{ states('sensor.datchik_dvizheniia_detskaia_battery') }}%

          Датчик температуры: {{ states('sensor.datchik_temperatury_detskaia_battery') }}%

          Датчик температуры на полу: {{ states('sensor.datchik_temperatury_na_polu_detskaia_battery') }}%
          
          Датчик левого окна: {{ states('sensor.levoe_okno_detskaia_battery') }}%
          
          Датчик правого окна: {{ states('sensor.pravoe_okno_detskaia_battery') }}%
          
        
          <b>Ванная:</b>
          
          Дверь: {{ states('sensor.dver_vannaia_battery') }}%
          
          Кнопка подсветки: {{ states('sensor.knopka_podsvetki_vannaia_battery') }}%
        
          Датчик утечки под ванной: {{ states('sensor.datchik_utechki_vody_pod_vannoi_vannaia_battery') }}%

          Датчик утечки под раковиной: {{ states('sensor.datchik_utechki_vody_pod_rakovinoi_vannaia_battery') }}%
         
          
          <b>Кухня:</b>
          
          Датчик движения: {{ states('sensor.datchik_dvizheniia_kukhnia_battery') }}%

          Кнопка подсветки: {{ states('sensor.knopka_podsvetki_kukhnia_battery') }}%
          
          Датчик дыма: {{ states('sensor.datchik_dyma_kukhnia_polotok_battery') }}%
          
          Датчик утечки под посудомойкой: {{ states('sensor.datchik_utechki_vody_pod_posudomoikoi_kukhnia_battery') }}%
          
          
          <b>Зал:</b>

          Датчик движения: {{ states('sensor.datchik_dvizheniia_zal_battery') }}%
          
          Датчик температуры: {{ states('sensor.datchik_temperatury_zal_battery') }}%
          
          Датчик утечки под батареей: {{ states('sensor.datchik_utechki_vody_zal_battery') }}%
          
          
          <b>Бар:</b>
        
          Датчик движения: {{ states('sensor.datchik_dvizheniia_bar_battery') }}%

          Кнопка жалюзи: {{ states('sensor.knopka_zhaliuzi_bar_battery') }}%
        
          Жалюзи: {{ states('sensor.zhaliuzi_bar_battery') }}%
        
          Датчик температуры: {{ states('sensor.datchik_temperatury_bar_battery') }}%
          
          Датчик правого окна: {{ states('sensor.pravoe_okno_bar_battery') }}%
          
          Датчик левого окна: {{ states('sensor.levoe_okno_bar_battery') }}%

          Датчик левой форточки: {{ states('sensor.levoe_okno_fortochka_bar_battery') }}%
        
        inline_keyboard:
          - 'Статус системы:/status, Состояние батареек:/zigbee_batteries'
          - 'Стоимость электроэнергии:/energy_cost'
          - 'Датчики температуры:/temperature, Датчики состояния:/states'
          
- alias: '[Telegram] - Вывод суммы за электроэнергию текущая и вчерашняя'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      command: '/energy_cost'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: "Стоимость израсходованной электроэнергии: "
        
    - service: telegram_bot.edit_message
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        title: "<b>Отчет электричество:</b>"
        message: >
          Текущая стоимость кВт.ч: <b>{{ states('sensor.electricity_price_current') }}</b> СУМ 

          ------- ТЕКУЩИЙ МЕСЯЦ -------
          
          Использовано <b>{{ states('sensor.elektrichestvo_mesiats') }}</b> СУМ
          
          Сумма: <b>{{ states('sensor.electricity_cost_monthly') }}</b> Сум

          ----------- ВЧЕРА -----------

          Использовано <b>{{ states('sensor.pzem04_energy_yesterday') }}</b> кВт
          
          Сумма: <b>{{ states('sensor.house_cost_yesterday') }}</b> Сум

          ---------- СЕГОДНЯ ----------

          Использовано <b>{{ states('sensor.pzem04_energy_today') }}</b> кВт 
          
          Кондиционер в детской: <b>{{ states('sensor.ac_cost_daily') }}</b> Сум
          
          Кондиционер в спальне: <b>{{ states('sensor.ac_bedroom_cost_daily') }}</b> Сум
          
          Полотенцесушитель: <b>{{ states('sensor.bath_radiator_cost_daily') }}</b> Сум
          
          Стиральная машинка: <b>{{ states('sensor.washer_cost_daily') }}</b> Сум

          Сумма: <b>{{ states('sensor.house_cost_daily') }}</b> Сум
        
        inline_keyboard:
          - 'Статус системы:/status, Состояние батареек:/zigbee_batteries'
          - 'Стоимость электроэнергии:/energy_cost'
          - 'Датчики температуры:/temperature, Датчики состояния:/states'
          
          
- alias: '[Telegram] - Вывод датчиков температуры'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      command: '/temperature'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: "Датчики температуры: "
        
    - service: telegram_bot.edit_message
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        title: "<b>Датчики температуры: </b>"
        message: >
        
          <b>Зал:</b>
          
          Датчик: Т: {{ states('sensor.datchik_temperatury_zal_temperature') }}С Вл: {{ states('sensor.datchik_temperatury_zal_humidity') }}%
          
          <b>Детская:</b>
        
          Датчик: Т: {{ states('sensor.datchik_temperatury_detskaia_temperature') }}С Вл: {{ states('sensor.datchik_temperatury_detskaia_humidity') }}%
        
          Датчик пол: {{ states('sensor.datchik_temperatury_na_polu_detskaia_temperature') }}С Вл: {{ states('sensor.datchik_temperatury_na_polu_detskaia_humidity') }}%

          <b>Бар:</b>
        
          Датчик: Т: {{ states('sensor.datchik_temperatury_bar_temperature') }}С Вл: {{ states('sensor.datchik_temperatury_bar_humidity') }}%
        
          <b>Спальня:</b>
          
          Датчик: Т: {{ states('sensor.datchik_temperatury_spalnia_temperature') }}С Вл: {{ states('sensor.datchik_temperatury_spalnia_humidity') }}%
         
        inline_keyboard:
          - 'Статус системы:/status, Состояние батареек:/zigbee_batteries'
          - 'Стоимость электроэнергии:/energy_cost'
          - 'Датчики температуры:/temperature, Датчики состояния:/states'
          

- alias: '[Telegram] - Вывод датчиков состояния'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      command: '/states'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: "Датчики состояния: "
        
    - service: telegram_bot.edit_message
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        title: "<b>Датчики состояния: </b>"
        message: >
        
          <b>Зал:</b>

          Датчик движения: {% if is_state('binary_sensor.datchik_dvizheniia_zal','off') %}
          Не обнаружено
          {% else %}
          Обнаружено
          {% endif %}
          
          Очиститель воздуха:{% if is_state('fan.zhimi_ma4_39fd_air_purifier', 'on') %} 
          Включен 
          {% else %} 
          Выключен 
          {% endif %}
          
          Xbox:{% if is_state('media_player.xbox_v_gostinoi', 'on') %} 
          Включен 
          {% else %} 
          Выключен 
          {% endif %}
          
          Пылесос:{% if is_state('vacuum.xiaomi_1c','idle') %}
          Простаивает
          {% elif is_state('vacuum.xiaomi_1c','cleaning') %}
          Убирается
          {% elif is_state('vacuum.xiaomi_1c','docked') %}
          На станции
          {% else %}
          Выключен
          {% endif %}
          
          Датчик утечки воды: {% if is_state('binary_sensor.datchik_utechki_vody_zal','off') %}
          Сухо
          {% else %}
          Утечка
          {% endif %}
          
          
          <b>Кухня:</b>

          Датчик движения: {% if is_state('binary_sensor.datchik_dvizheniia_kukhnia','off') %}
          Не обнаружено
          {% else %}
          Обнаружено
          {% endif %}
          
          Датчик утечки газа (потолок): {% if is_state('binary_sensor.datchik_gaza_kukhnia','off') %}
          Чисто
          {% else %}
          Тревога
          {% endif %}
          
          Датчик дыма (потолок): {% if is_state('binary_sensor.datchik_dyma_kukhnia','off') %}
          Чисто
          {% else %}
          Тревога
          {% endif %}
          
          Датчик утечки воды: {% if is_state('binary_sensor.datchik_utechki_vody_pod_posudomoikoi_kukhnia','off') %}
          Сухо
          {% else %}
          Утечка
          {% endif %}
          
          
          <b>Спальня:</b>
          
          Дверь: {% if is_state('binary_sensor.dver_spalnia','off') %}
          Закрыта
          {% else %}
          Открыта
          {% endif %}
          
          Датчик движения: {% if is_state('binary_sensor.datchik_dvizheniia_spalnia','off') %}
          Не обнаружено
          {% else %}
          Обнаружено
          {% endif %}

          Кондиционер: {% if is_state('climate.midea_ac_30786325663901','fan_only') %}
          Вентиляция
          {% elif is_state('climate.midea_ac_30786325663901','auto') %}
          Авто
          {% elif is_state('climate.midea_ac_30786325663901','dry') %}
          Осушение
          {% elif is_state('climate.midea_ac_30786325663901','heat') %}
          Обогрев
          {% elif is_state('climate.midea_ac_30786325663901','cool') %}
          Охлаждение
          {% else %}
          Выключен
          {% endif %}

          Левое окно: {% if is_state('binary_sensor.levoe_okno_spalnia','off') %}
          Закрыто
          {% else %}
          Открыто
          {% endif %}
          
          Правое окно: {% if is_state('binary_sensor.pravoe_okno_spalnia','off') %}
          Закрыто
          {% else %}
          Открыто
          {% endif %}
          
          Датчик утечки воды: {% if is_state('binary_sensor.datchik_utechki_vody_spalnia','off') %}
          Сухо
          {% else %}
          Утечка
          {% endif %}
          
          
          <b>Ванная:</b>
          
          Дверь: {% if is_state('binary_sensor.bath_door_contact','off') %}
          Закрыта
          {% else %}
          Открыта
          {% endif %}
          
          Датчик утечки воды: {% if is_state('binary_sensor.datchik_utechki_vody_pod_vannoi_vannaia','off') %}
          Сухо
          {% else %}
          Утечка
          {% endif %}

          Датчик утечки воды (р): {% if is_state('binary_sensor.datchik_utechki_vody_pod_rakovinoi_vannaia','off') %}
          Сухо
          {% else %}
          Утечка
          {% endif %}
          
          
          <b>Туалет:</b>
          
          Дверь: {% if is_state('binary_sensor.dver_tualet','off') %}
          Закрыта
          {% else %}
          Открыта
          {% endif %}
          
          
          <b>Детская:</b>

          Датчик движения: {% if is_state('binary_sensor.datchik_dvizheniia_detskaia','off') %}
          Не обнаружено
          {% else %}
          Обнаружено
          {% endif %}
        
          Кондиционер: {% if is_state('climate.midea_ac_30786326300484','fan_only') %}
          Вентиляция
          {% elif is_state('climate.midea_ac_30786326300484','auto') %}
          Авто
          {% elif is_state('climate.midea_ac_30786326300484','dry') %}
          Осушение
          {% elif is_state('climate.midea_ac_30786326300484','heat') %}
          Обогрев
          {% elif is_state('climate.midea_ac_30786326300484','cool') %}
          Охлаждение
          {% else %}
          Выключен
          {% endif %}
          
          Теплый пол: {% if is_state('climate.teplyi_pol_detskaia','heat') %}
          Обогрев
          {% else %}
          Выключен
          {% endif %}
        
          Левое окно: {% if is_state('binary_sensor.levoe_okno_detskaia','off') %}
          Закрыто
          {% else %}
          Открыто
          {% endif %}
          
          Правое окно: {% if is_state('binary_sensor.pravoe_okno_detskaia','off') %}
          Закрыто
          {% else %}
          Открыто
          {% endif %}
          
          
          <b>Бар:</b>
        
          Датчик движения: {% if is_state('binary_sensor.datchik_dvizheniia_bar','off') %}
          Не обнаружено
          {% else %}
          Обнаружено
          {% endif %}

          Жалюзи: {{ states('sensor.zhaliuzi_bar_state') }}
          
          Правое окно: {% if is_state('binary_sensor.pravoe_okno_bar','off') %}
          Закрыто
          {% else %}
          Открыто
          {% endif %}
          
          Левое окно: {% if is_state('binary_sensor.levoe_okno_bar','off') %}
          Закрыто
          {% else %}
          Открыто
          {% endif %}        

          Форточка: {% if is_state('binary_sensor.levoe_okno_fortochka_bar','off') %}
          Закрыто
          {% else %}
          Открыто
          {% endif %}      
         
        inline_keyboard:
          - 'Статус системы:/status, Состояние батареек:/zigbee_batteries'
          - 'Стоимость электроэнергии:/energy_cost'
          - 'Датчики температуры:/temperature, Датчики состояния:/states'
